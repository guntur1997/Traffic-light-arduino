#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <EEPROM.h>

#ifndef APSSID
#define APSSID "SIMULASI-TRAFFIC_LIGHT"
#define APPSW "12345678"
#endif

const char *ssid = APSSID;
const char *password = APPSW;

#define merah   0 //D3
#define kuning  5//D1
#define hijau   4//D2
#define buzer   14//D5

byte durasimerah = 10; 
byte durasikuning = 5;      
byte durasihijau = 10;  

byte a1 = 1; //keempatnya ini hanya variabel awal agar dibaca perintahnya pada bagian if(millis()-millisSebelumnya >=1000) //bagian 145
byte a2 = 0;
byte a3 = 0;
byte a4 = 0;

#define ledkonek  2 //D4  //ini led indikator penanda bahwa ESP siap digunakan

unsigned long millis1 = 0;
String pesan = "contoh pesan";


ESP8266WebServer server(80);

void setup() {
  Serial.begin(9600);

  pinMode(merah, OUTPUT);
  pinMode(kuning, OUTPUT);
  pinMode(hijau, OUTPUT);
  pinMode(buzer, OUTPUT);
  pinMode(ledkonek, OUTPUT);

  digitalWrite(merah, LOW);
  digitalWrite(kuning, LOW);
  digitalWrite(hijau, LOW);
  digitalWrite(buzer, LOW);
  digitalWrite(ledkonek, HIGH);
  
  
  EEPROM.begin(512); //khusus untuk ESP, bagian ini wajib disertakan
  durasimerah = EEPROM.read(1);
  durasikuning = EEPROM.read(2);
  durasihijau = EEPROM.read(3);

  Serial.print("Configuring access point...");
  WiFi.mode(WIFI_AP);
  WiFi.softAP(ssid, password);
 
  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
  server.on("/pesan",handlePesan);
  
  server.begin();
  Serial.println("HTTP server started");

  Serial.println("VOID SETUP *****************************************");
  Serial.print("DURASI MERAH = ");
  Serial.println(durasimerah);
  Serial.print("DURASI KUNING = ");
  Serial.println(durasikuning);
  Serial.print("DURASI HIJAU = ");
  Serial.println(durasihijau);
  Serial.println("END SETUP ******************************************");
  
  delay(2000);
}



void handlePesan() {
 pesan = server.arg("Text");
 String parsing = "PESAN DITERIMA : "+pesan;
 Serial.println(pesan);
 server.send(200, "text/html", parsing);
 
 if(pesan.substring(0,5) == "MERAH"){
  durasimerah = pesan.substring(5,pesan.length()).toInt();
  Serial.println("SETTING MERAH : ");
  Serial.println(durasimerah);
  EEPROM.write(1, durasimerah);
  EEPROM.commit();
  digitalWrite(buzer, HIGH);
  delay(1000);
  pesan = "";
  a1 = 1;
  a2 = 0;
  a3 = 0;
  digitalWrite(buzer, LOW);
 }
 if(pesan.substring(0,5) == "KNING"){
  durasikuning = pesan.substring(5,pesan.length()).toInt();
  Serial.println("SETTING KUNING : ");
  Serial.println(durasikuning);
  EEPROM.write(2, durasikuning);
  EEPROM.commit();
  digitalWrite(buzer, HIGH);
  delay(1000);
  pesan = "";
  a1 = 1;
  a2 = 0;
  a3 = 0;
  digitalWrite(buzer, LOW);
 }
 if(pesan.substring(0,5) == "HIJAU"){
  durasihijau = pesan.substring(5,pesan.length()).toInt();
  Serial.println("SETTING HIJAU : ");
  Serial.println(durasihijau);
  EEPROM.write(3, durasihijau);
  EEPROM.commit();
  digitalWrite(buzer, HIGH);
  delay(1000);
  pesan = "";
  a1 = 1;
  a2 = 0;
  a3 = 0;
  digitalWrite(buzer, LOW);
 }
 
 
 
}

void loop() {
  server.handleClient();
  digitalWrite(ledkonek, LOW);
  
  if(millis() - millis1 >= 1000){ //ini artinya sama seperti delay(1000), hanya saja penggunaannya tidak mempengaruhi pembacaan data pada ESP
    millis1 = millis();
    if(a1 >= 1){  
      Serial.println("***********************MERAH*******************************************");
      if(a1 >= durasimerah){  //apabila nilai a1 sama dengan nilai detik di durasimerah, maka beralih ke segment selanjutnya
        a1 = 0;
        a2 = 1;
        a3 = 0;
        a4 = 0;
        digitalWrite(merah, HIGH);
        digitalWrite(kuning, HIGH);
        digitalWrite(hijau, LOW);
      }
      else{   //apabila nilai a1 belum mencapai nilai detik di durasimerah maka led merah tetap menyala
        a1++; //1000ms
        a2 = 0;
        a3 = 0;
        a4 = 0;
        digitalWrite(merah, HIGH);
        digitalWrite(kuning, LOW);
        digitalWrite(hijau, LOW);
      }
    }
    if(a2 >= 1){
      Serial.println("***********************KUNING*******************************************");
      if(a2 >= durasikuning){  //apabila nilai a2 sama dengan nilai detik di durasikuning, maka beralih ke segment selanjutnya
        a1 = 0;
        a2 = 0;
        a3 = 1;
        a4 = 0;
        digitalWrite(merah, LOW);
        digitalWrite(kuning, LOW);
        digitalWrite(hijau, HIGH);
      }
      else{  //apabila nilai a2 belum mencapai nilai detik di durasikuning maka led kuning tetap menyala
        a2++;
        a1 = 0;
        a3 = 0;
        a4 = 0;
        digitalWrite(merah, HIGH);
        digitalWrite(kuning, HIGH);
        digitalWrite(hijau, LOW);
      }
    }
    if(a3 >= 1){
      Serial.println("***********************HIJAU*******************************************");
      if(a3 >= durasihijau){ //apabila nilai a3 sama dengan nilai detik di durasihijau, maka beralih ke segment selanjutnya
        a1 = 0;
        a2 = 0;
        a3 = 0;
        a4 = 1;
        digitalWrite(merah, LOW);
        digitalWrite(kuning, HIGH);
        digitalWrite(hijau, LOW);
      }
      else{   //apabila nilai a3 belum mencapai nilai detik di durasihijau maka led hijau tetap menyala
        a3++;
        a2 = 0;
        a1 = 0;
        a4 = 0;
        digitalWrite(merah, LOW);
        digitalWrite(kuning, LOW);
        digitalWrite(hijau, HIGH);
      }
    }
    if(a4 >= 1){
      Serial.println("***********************KUNING*******************************************");
      if(a4 >= durasikuning){ //apabila nilai a4 sama dengan nilai detik di durasikuning, maka beralih ke segment selanjutnya
        a1 = 1;
        a2 = 0;
        a3 = 0;
        a4 = 0;
        digitalWrite(merah, HIGH);
        digitalWrite(kuning, LOW);
        digitalWrite(hijau, LOW);
      }
      else{   //apabila nilai a4 belum mencapai nilai detik di durasikuning maka led kuning tetap menyala
        a4++;
        a2 = 0;
        a1 = 0;
        a3 = 0;
        digitalWrite(merah, LOW);
        digitalWrite(kuning, HIGH);
        digitalWrite(hijau, LOW);
      }
    }
    
  }
}
